## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_interface",
    "ocaml_module",
    "ocaml_ns",
)

################################################################
## STANZA 1: LIBRARY EAGER_DEFERRED
################################################################
EAGER_DEFERRED_INTERFACE_OPTS = []

EAGER_DEFERRED_MODULE_OPTS = []

EAGER_DEFERRED_DEPS = [
    # do not sort (buildifier)
    "@async_kernel//src:async_kernel",
]

EAGER_DEFERRED_PPX = "@//bzl/ppx/exe:ppx_jane"

EAGER_DEFERRED_PPX_ARGS = [
    # do not sort (buildifier)
    "-inline-test-lib",
    "eager_deferred",
]

##############
ocaml_archive(
    name = "eager_deferred",
    opts = [],
    visibility = ["//visibility:public"],
    deps = EAGER_DEFERRED_DEPS + [
        # do not sort (buildifier)
        ":_Eager_deferred",
        ":_Eager_deferred0",
        ":_Eager_deferred1",
        ":_Eager_deferred_or_error",
        ":_Eager_deferred_result",
        ":_Import",
    ],
)

#########
ocaml_ns(
    name = "Eager_deferred_ns",
    ns = "eager_deferred",
    opts = [],
    submodules = [
        # do not sort (buildifier)
        "eager_deferred.ml",
        "eager_deferred0.ml",
        "eager_deferred1.ml",
        "eager_deferred_or_error.ml",
        "eager_deferred_result.ml",
        "import.ml",
    ],
)

#############
ocaml_module(
    name = "_Eager_deferred",
    src = "eager_deferred.ml",
    ns = ":Eager_deferred_ns",
    opts = EAGER_DEFERRED_MODULE_OPTS,
    ppx = EAGER_DEFERRED_PPX,
    ppx_args = EAGER_DEFERRED_PPX_ARGS,
    deps = EAGER_DEFERRED_DEPS + [
        # do not sort (buildifier)
        ":_Eager_deferred1",
        ":_Import",
    ],
)

#############
ocaml_module(
    name = "_Eager_deferred0",
    src = "eager_deferred0.ml",
    ns = ":Eager_deferred_ns",
    opts = EAGER_DEFERRED_MODULE_OPTS,
    ppx = EAGER_DEFERRED_PPX,
    ppx_args = EAGER_DEFERRED_PPX_ARGS,
    deps = EAGER_DEFERRED_DEPS + [
        # do not sort (buildifier)
        ":_Import",
    ],
)

#############
ocaml_module(
    name = "_Eager_deferred1",
    src = "eager_deferred1.ml",
    intf = ":_Eager_deferred1.cmi",
    ns = ":Eager_deferred_ns",
    opts = EAGER_DEFERRED_MODULE_OPTS,
    ppx = EAGER_DEFERRED_PPX,
    ppx_args = EAGER_DEFERRED_PPX_ARGS,
    deps = EAGER_DEFERRED_DEPS + [
        # do not sort (buildifier)
        ":_Eager_deferred0",
        ":_Eager_deferred_or_error",
        ":_Eager_deferred_result",
    ],
)

################
ocaml_interface(
    name = "_Eager_deferred1.cmi",
    src = "eager_deferred1.mli",
    ns = ":Eager_deferred_ns",
    opts = EAGER_DEFERRED_INTERFACE_OPTS,
    ppx = EAGER_DEFERRED_PPX,
    ppx_args = EAGER_DEFERRED_PPX_ARGS,
    deps = EAGER_DEFERRED_DEPS + [
        # do not sort (buildifier)
        ":_Eager_deferred_or_error",
        ":_Import",
    ],
)

#############
ocaml_module(
    name = "_Eager_deferred_or_error",
    src = "eager_deferred_or_error.ml",
    intf = ":_Eager_deferred_or_error.cmi",
    ns = ":Eager_deferred_ns",
    opts = EAGER_DEFERRED_MODULE_OPTS,
    ppx = EAGER_DEFERRED_PPX,
    ppx_args = EAGER_DEFERRED_PPX_ARGS,
    deps = EAGER_DEFERRED_DEPS + [
        # do not sort (buildifier)
        ":_Eager_deferred0",
        ":_Eager_deferred_result",
        ":_Import",
    ],
)

################
ocaml_interface(
    name = "_Eager_deferred_or_error.cmi",
    src = "eager_deferred_or_error.mli",
    ns = ":Eager_deferred_ns",
    opts = EAGER_DEFERRED_INTERFACE_OPTS,
    ppx = EAGER_DEFERRED_PPX,
    ppx_args = EAGER_DEFERRED_PPX_ARGS,
    deps = EAGER_DEFERRED_DEPS + [
        # do not sort (buildifier)
        ":_Import",
    ],
)

#############
ocaml_module(
    name = "_Eager_deferred_result",
    src = "eager_deferred_result.ml",
    ns = ":Eager_deferred_ns",
    opts = EAGER_DEFERRED_MODULE_OPTS,
    ppx = EAGER_DEFERRED_PPX,
    ppx_args = EAGER_DEFERRED_PPX_ARGS,
    deps = EAGER_DEFERRED_DEPS + [
        # do not sort (buildifier)
        ":_Eager_deferred0",
        ":_Import",
    ],
)

#############
ocaml_module(
    name = "_Import",
    src = "import.ml",
    ns = ":Eager_deferred_ns",
    opts = EAGER_DEFERRED_MODULE_OPTS,
    ppx = EAGER_DEFERRED_PPX,
    ppx_args = EAGER_DEFERRED_PPX_ARGS,
    deps = EAGER_DEFERRED_DEPS,
)
